### YamlMime:ManagedReference
items:
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1
  commentId: T:Calabonga.EntityProcessor.Results.ExecutionResultBase`1
  id: ExecutionResultBase`1
  parent: Calabonga.EntityProcessor.Results
  children:
  - Calabonga.EntityProcessor.Results.ExecutionResultBase`1.#ctor(`0,Calabonga.EntityProcessor.Actions.EntityActionResult)
  - Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Entity
  - Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Ok
  - Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Result
  - Calabonga.EntityProcessor.Results.ExecutionResultBase`1.SetValidationResults(IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})
  - Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Validations
  langs:
  - csharp
  - vb
  name: ExecutionResultBase<TEntity>
  nameWithType: ExecutionResultBase<TEntity>
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>
  type: Class
  source:
    remote:
      path: src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: ExecutionResultBase
    path: ../../src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
    startLine: 5
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor.Results
  syntax:
    content: public abstract class ExecutionResultBase<TEntity>
    typeParameters:
    - id: TEntity
    content.vb: Public MustInherit Class ExecutionResultBase(Of TEntity)
  inheritance:
  - System.Object
  derivedClasses:
  - Calabonga.EntityProcessor.Results.ExecutionErrorResult`1
  - Calabonga.EntityProcessor.Results.ExecutionSuccessResult`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ExecutionResultBase(Of TEntity)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity)
  name.vb: ExecutionResultBase(Of TEntity)
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.#ctor(`0,Calabonga.EntityProcessor.Actions.EntityActionResult)
  commentId: M:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.#ctor(`0,Calabonga.EntityProcessor.Actions.EntityActionResult)
  id: '#ctor(`0,Calabonga.EntityProcessor.Actions.EntityActionResult)'
  parent: Calabonga.EntityProcessor.Results.ExecutionResultBase`1
  langs:
  - csharp
  - vb
  name: ExecutionResultBase(TEntity, EntityActionResult)
  nameWithType: ExecutionResultBase<TEntity>.ExecutionResultBase(TEntity, EntityActionResult)
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.ExecutionResultBase(TEntity, Calabonga.EntityProcessor.Actions.EntityActionResult)
  type: Constructor
  source:
    remote:
      path: src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: .ctor
    path: ../../src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
    startLine: 7
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor.Results
  syntax:
    content: protected ExecutionResultBase(TEntity entity, EntityActionResult result)
    parameters:
    - id: entity
      type: '{TEntity}'
    - id: result
      type: Calabonga.EntityProcessor.Actions.EntityActionResult
    content.vb: Protected Sub New(entity As TEntity, result As EntityActionResult)
  overload: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.#ctor*
  nameWithType.vb: ExecutionResultBase(Of TEntity).ExecutionResultBase(TEntity, EntityActionResult)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).ExecutionResultBase(TEntity, Calabonga.EntityProcessor.Actions.EntityActionResult)
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Result
  commentId: P:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Result
  id: Result
  parent: Calabonga.EntityProcessor.Results.ExecutionResultBase`1
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ExecutionResultBase<TEntity>.Result
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.Result
  type: Property
  source:
    remote:
      path: src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: Result
    path: ../../src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
    startLine: 13
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor.Results
  syntax:
    content: public EntityActionResult Result { get; }
    parameters: []
    return:
      type: Calabonga.EntityProcessor.Actions.EntityActionResult
    content.vb: Public ReadOnly Property Result As EntityActionResult
  overload: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Result*
  nameWithType.vb: ExecutionResultBase(Of TEntity).Result
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).Result
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Validations
  commentId: P:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Validations
  id: Validations
  parent: Calabonga.EntityProcessor.Results.ExecutionResultBase`1
  langs:
  - csharp
  - vb
  name: Validations
  nameWithType: ExecutionResultBase<TEntity>.Validations
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.Validations
  type: Property
  source:
    remote:
      path: src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: Validations
    path: ../../src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
    startLine: 15
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor.Results
  syntax:
    content: public IEnumerable<ValidationResult>? Validations { get; }
    parameters: []
    return:
      type: System.Nullable{IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult}}
    content.vb: Public ReadOnly Property Validations As IEnumerable(Of ValidationResult)?
  overload: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Validations*
  nameWithType.vb: ExecutionResultBase(Of TEntity).Validations
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).Validations
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Ok
  commentId: P:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Ok
  id: Ok
  parent: Calabonga.EntityProcessor.Results.ExecutionResultBase`1
  langs:
  - csharp
  - vb
  name: Ok
  nameWithType: ExecutionResultBase<TEntity>.Ok
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.Ok
  type: Property
  source:
    remote:
      path: src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: Ok
    path: ../../src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
    startLine: 17
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor.Results
  syntax:
    content: public bool Ok { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Ok As Boolean
  overload: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Ok*
  nameWithType.vb: ExecutionResultBase(Of TEntity).Ok
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).Ok
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Entity
  commentId: P:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Entity
  id: Entity
  parent: Calabonga.EntityProcessor.Results.ExecutionResultBase`1
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: ExecutionResultBase<TEntity>.Entity
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.Entity
  type: Property
  source:
    remote:
      path: src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: Entity
    path: ../../src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
    startLine: 19
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor.Results
  syntax:
    content: public TEntity Entity { get; }
    parameters: []
    return:
      type: '{TEntity}'
    content.vb: Public ReadOnly Property Entity As TEntity
  overload: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Entity*
  nameWithType.vb: ExecutionResultBase(Of TEntity).Entity
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).Entity
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.SetValidationResults(IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})
  commentId: M:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.SetValidationResults(IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})
  id: SetValidationResults(IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})
  parent: Calabonga.EntityProcessor.Results.ExecutionResultBase`1
  langs:
  - csharp
  - vb
  name: SetValidationResults(IEnumerable<ValidationResult>)
  nameWithType: ExecutionResultBase<TEntity>.SetValidationResults(IEnumerable<ValidationResult>)
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.SetValidationResults(IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult>)
  type: Method
  source:
    remote:
      path: src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: SetValidationResults
    path: ../../src/Calabonga.EntityProcessor/Results/ExecutionResultBase.cs
    startLine: 22
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor.Results
  syntax:
    content: protected void SetValidationResults(IEnumerable<ValidationResult> validationResults)
    parameters:
    - id: validationResults
      type: IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult}
    content.vb: Protected Sub SetValidationResults(validationResults As IEnumerable(Of ValidationResult))
  overload: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.SetValidationResults*
  nameWithType.vb: ExecutionResultBase(Of TEntity).SetValidationResults(IEnumerable(Of ValidationResult))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).SetValidationResults(IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationResult))
  name.vb: SetValidationResults(IEnumerable(Of ValidationResult))
references:
- uid: Calabonga.EntityProcessor.Results
  commentId: N:Calabonga.EntityProcessor.Results
  name: Calabonga.EntityProcessor.Results
  nameWithType: Calabonga.EntityProcessor.Results
  fullName: Calabonga.EntityProcessor.Results
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.#ctor*
  commentId: Overload:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.#ctor
  name: ExecutionResultBase
  nameWithType: ExecutionResultBase<TEntity>.ExecutionResultBase
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.ExecutionResultBase
  nameWithType.vb: ExecutionResultBase(Of TEntity).ExecutionResultBase
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).ExecutionResultBase
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Calabonga.EntityProcessor.Actions.EntityActionResult
  commentId: T:Calabonga.EntityProcessor.Actions.EntityActionResult
  parent: Calabonga.EntityProcessor.Actions
  name: EntityActionResult
  nameWithType: EntityActionResult
  fullName: Calabonga.EntityProcessor.Actions.EntityActionResult
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Calabonga.EntityProcessor.Actions
  commentId: N:Calabonga.EntityProcessor.Actions
  name: Calabonga.EntityProcessor.Actions
  nameWithType: Calabonga.EntityProcessor.Actions
  fullName: Calabonga.EntityProcessor.Actions
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Result*
  commentId: Overload:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Result
  name: Result
  nameWithType: ExecutionResultBase<TEntity>.Result
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.Result
  nameWithType.vb: ExecutionResultBase(Of TEntity).Result
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).Result
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Validations*
  commentId: Overload:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Validations
  name: Validations
  nameWithType: ExecutionResultBase<TEntity>.Validations
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.Validations
  nameWithType.vb: ExecutionResultBase(Of TEntity).Validations
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).Validations
- uid: System.Nullable{IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult}}
  commentId: T:System.Nullable{IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult}}
  parent: System
  definition: System.Nullable`1
  name: Nullable<IEnumerable<ValidationResult>>
  nameWithType: Nullable<IEnumerable<ValidationResult>>
  fullName: System.Nullable<IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult>>
  nameWithType.vb: Nullable(Of IEnumerable(Of ValidationResult))
  fullName.vb: System.Nullable(Of IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationResult))
  name.vb: Nullable(Of IEnumerable(Of ValidationResult))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Ok*
  commentId: Overload:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Ok
  name: Ok
  nameWithType: ExecutionResultBase<TEntity>.Ok
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.Ok
  nameWithType.vb: ExecutionResultBase(Of TEntity).Ok
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).Ok
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Entity*
  commentId: Overload:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.Entity
  name: Entity
  nameWithType: ExecutionResultBase<TEntity>.Entity
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.Entity
  nameWithType.vb: ExecutionResultBase(Of TEntity).Entity
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).Entity
- uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1.SetValidationResults*
  commentId: Overload:Calabonga.EntityProcessor.Results.ExecutionResultBase`1.SetValidationResults
  name: SetValidationResults
  nameWithType: ExecutionResultBase<TEntity>.SetValidationResults
  fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>.SetValidationResults
  nameWithType.vb: ExecutionResultBase(Of TEntity).SetValidationResults
  fullName.vb: Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity).SetValidationResults
- uid: IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult}
  commentId: '!:IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult}'
  definition: IEnumerable`1
  name: IEnumerable<ValidationResult>
  nameWithType: IEnumerable<ValidationResult>
  fullName: IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult>
  nameWithType.vb: IEnumerable(Of ValidationResult)
  fullName.vb: IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationResult)
  name.vb: IEnumerable(Of ValidationResult)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    nameWithType: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
