### YamlMime:ManagedReference
items:
- uid: Calabonga.EntityProcessor.DomainEventCollectionBase
  commentId: T:Calabonga.EntityProcessor.DomainEventCollectionBase
  id: DomainEventCollectionBase
  parent: Calabonga.EntityProcessor
  children:
  - Calabonga.EntityProcessor.DomainEventCollectionBase.AddDomainEvent(Calabonga.EntityProcessor.Events.IDomainEvent)
  - Calabonga.EntityProcessor.DomainEventCollectionBase.DomainEvents
  langs:
  - csharp
  - vb
  name: DomainEventCollectionBase
  nameWithType: DomainEventCollectionBase
  fullName: Calabonga.EntityProcessor.DomainEventCollectionBase
  type: Class
  source:
    remote:
      path: src/Calabonga.EntityProcessor/DomainEventCollectionBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: DomainEventCollectionBase
    path: ../../src/Calabonga.EntityProcessor/DomainEventCollectionBase.cs
    startLine: 5
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor
  syntax:
    content: 'public abstract class DomainEventCollectionBase : IHaveDomainEvents'
    content.vb: >-
      Public MustInherit Class DomainEventCollectionBase
          Implements IHaveDomainEvents
  inheritance:
  - System.Object
  derivedClasses:
  - Calabonga.EntityProcessor.EntityProcessorContext
  - Calabonga.EntityProcessor.Results.ResultBase
  implements:
  - Calabonga.EntityProcessor.Actions.IHaveDomainEvents
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Calabonga.EntityProcessor.DomainEventCollectionBase.DomainEvents
  commentId: P:Calabonga.EntityProcessor.DomainEventCollectionBase.DomainEvents
  id: DomainEvents
  parent: Calabonga.EntityProcessor.DomainEventCollectionBase
  langs:
  - csharp
  - vb
  name: DomainEvents
  nameWithType: DomainEventCollectionBase.DomainEvents
  fullName: Calabonga.EntityProcessor.DomainEventCollectionBase.DomainEvents
  type: Property
  source:
    remote:
      path: src/Calabonga.EntityProcessor/DomainEventCollectionBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: DomainEvents
    path: ../../src/Calabonga.EntityProcessor/DomainEventCollectionBase.cs
    startLine: 9
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor
  syntax:
    content: public IEnumerable<IDomainEvent> DomainEvents { get; }
    parameters: []
    return:
      type: IEnumerable{Calabonga.EntityProcessor.Events.IDomainEvent}
    content.vb: Public ReadOnly Property DomainEvents As IEnumerable(Of IDomainEvent)
  overload: Calabonga.EntityProcessor.DomainEventCollectionBase.DomainEvents*
  implements:
  - Calabonga.EntityProcessor.Actions.IHaveDomainEvents.DomainEvents
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Calabonga.EntityProcessor.DomainEventCollectionBase.AddDomainEvent(Calabonga.EntityProcessor.Events.IDomainEvent)
  commentId: M:Calabonga.EntityProcessor.DomainEventCollectionBase.AddDomainEvent(Calabonga.EntityProcessor.Events.IDomainEvent)
  id: AddDomainEvent(Calabonga.EntityProcessor.Events.IDomainEvent)
  parent: Calabonga.EntityProcessor.DomainEventCollectionBase
  langs:
  - csharp
  - vb
  name: AddDomainEvent(IDomainEvent)
  nameWithType: DomainEventCollectionBase.AddDomainEvent(IDomainEvent)
  fullName: Calabonga.EntityProcessor.DomainEventCollectionBase.AddDomainEvent(Calabonga.EntityProcessor.Events.IDomainEvent)
  type: Method
  source:
    remote:
      path: src/Calabonga.EntityProcessor/DomainEventCollectionBase.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: AddDomainEvent
    path: ../../src/Calabonga.EntityProcessor/DomainEventCollectionBase.cs
    startLine: 11
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor
  syntax:
    content: public void AddDomainEvent(IDomainEvent domainCommand)
    parameters:
    - id: domainCommand
      type: Calabonga.EntityProcessor.Events.IDomainEvent
    content.vb: Public Sub AddDomainEvent(domainCommand As IDomainEvent)
  overload: Calabonga.EntityProcessor.DomainEventCollectionBase.AddDomainEvent*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Calabonga.EntityProcessor
  commentId: N:Calabonga.EntityProcessor
  name: Calabonga.EntityProcessor
  nameWithType: Calabonga.EntityProcessor
  fullName: Calabonga.EntityProcessor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Calabonga.EntityProcessor.Actions.IHaveDomainEvents
  commentId: T:Calabonga.EntityProcessor.Actions.IHaveDomainEvents
  parent: Calabonga.EntityProcessor.Actions
  name: IHaveDomainEvents
  nameWithType: IHaveDomainEvents
  fullName: Calabonga.EntityProcessor.Actions.IHaveDomainEvents
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Calabonga.EntityProcessor.Actions
  commentId: N:Calabonga.EntityProcessor.Actions
  name: Calabonga.EntityProcessor.Actions
  nameWithType: Calabonga.EntityProcessor.Actions
  fullName: Calabonga.EntityProcessor.Actions
- uid: Calabonga.EntityProcessor.DomainEventCollectionBase.DomainEvents*
  commentId: Overload:Calabonga.EntityProcessor.DomainEventCollectionBase.DomainEvents
  name: DomainEvents
  nameWithType: DomainEventCollectionBase.DomainEvents
  fullName: Calabonga.EntityProcessor.DomainEventCollectionBase.DomainEvents
- uid: Calabonga.EntityProcessor.Actions.IHaveDomainEvents.DomainEvents
  commentId: P:Calabonga.EntityProcessor.Actions.IHaveDomainEvents.DomainEvents
  parent: Calabonga.EntityProcessor.Actions.IHaveDomainEvents
  name: DomainEvents
  nameWithType: IHaveDomainEvents.DomainEvents
  fullName: Calabonga.EntityProcessor.Actions.IHaveDomainEvents.DomainEvents
- uid: IEnumerable{Calabonga.EntityProcessor.Events.IDomainEvent}
  commentId: '!:IEnumerable{Calabonga.EntityProcessor.Events.IDomainEvent}'
  definition: IEnumerable`1
  name: IEnumerable<IDomainEvent>
  nameWithType: IEnumerable<IDomainEvent>
  fullName: IEnumerable<Calabonga.EntityProcessor.Events.IDomainEvent>
  nameWithType.vb: IEnumerable(Of IDomainEvent)
  fullName.vb: IEnumerable(Of Calabonga.EntityProcessor.Events.IDomainEvent)
  name.vb: IEnumerable(Of IDomainEvent)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Calabonga.EntityProcessor.Events.IDomainEvent
    name: IDomainEvent
    nameWithType: IDomainEvent
    fullName: Calabonga.EntityProcessor.Events.IDomainEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Calabonga.EntityProcessor.Events.IDomainEvent
    name: IDomainEvent
    nameWithType: IDomainEvent
    fullName: Calabonga.EntityProcessor.Events.IDomainEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Calabonga.EntityProcessor.DomainEventCollectionBase.AddDomainEvent*
  commentId: Overload:Calabonga.EntityProcessor.DomainEventCollectionBase.AddDomainEvent
  name: AddDomainEvent
  nameWithType: DomainEventCollectionBase.AddDomainEvent
  fullName: Calabonga.EntityProcessor.DomainEventCollectionBase.AddDomainEvent
- uid: Calabonga.EntityProcessor.Events.IDomainEvent
  commentId: T:Calabonga.EntityProcessor.Events.IDomainEvent
  parent: Calabonga.EntityProcessor.Events
  name: IDomainEvent
  nameWithType: IDomainEvent
  fullName: Calabonga.EntityProcessor.Events.IDomainEvent
- uid: Calabonga.EntityProcessor.Events
  commentId: N:Calabonga.EntityProcessor.Events
  name: Calabonga.EntityProcessor.Events
  nameWithType: Calabonga.EntityProcessor.Events
  fullName: Calabonga.EntityProcessor.Events
