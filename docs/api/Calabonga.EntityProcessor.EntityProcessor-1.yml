### YamlMime:ManagedReference
items:
- uid: Calabonga.EntityProcessor.EntityProcessor`1
  commentId: T:Calabonga.EntityProcessor.EntityProcessor`1
  id: EntityProcessor`1
  parent: Calabonga.EntityProcessor
  children:
  - Calabonga.EntityProcessor.EntityProcessor`1.#ctor(MediatR.IMediator,Calabonga.EntityProcessor.EntityProcessorConfiguration{`0},Microsoft.Extensions.Logging.ILogger,IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}})
  - Calabonga.EntityProcessor.EntityProcessor`1.ProcessAsync(`0,Calabonga.EntityProcessor.Actions.IAction{`0},System.Nullable{IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}}},CancellationToken)
  langs:
  - csharp
  - vb
  name: EntityProcessor<TEntity>
  nameWithType: EntityProcessor<TEntity>
  fullName: Calabonga.EntityProcessor.EntityProcessor<TEntity>
  type: Class
  source:
    remote:
      path: src/Calabonga.EntityProcessor/EntityProcessor.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: EntityProcessor
    path: ../../src/Calabonga.EntityProcessor/EntityProcessor.cs
    startLine: 11
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor
  syntax:
    content: 'public abstract class EntityProcessor<TEntity> : IEntityProcessor where TEntity : class'
    typeParameters:
    - id: TEntity
    content.vb: >-
      Public MustInherit Class EntityProcessor(Of TEntity As Class)
          Implements IEntityProcessor
  inheritance:
  - System.Object
  implements:
  - Calabonga.EntityProcessor.IEntityProcessor
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: EntityProcessor(Of TEntity)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Calabonga.EntityProcessor.EntityProcessor(Of TEntity)
  name.vb: EntityProcessor(Of TEntity)
- uid: Calabonga.EntityProcessor.EntityProcessor`1.#ctor(MediatR.IMediator,Calabonga.EntityProcessor.EntityProcessorConfiguration{`0},Microsoft.Extensions.Logging.ILogger,IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}})
  commentId: M:Calabonga.EntityProcessor.EntityProcessor`1.#ctor(MediatR.IMediator,Calabonga.EntityProcessor.EntityProcessorConfiguration{`0},Microsoft.Extensions.Logging.ILogger,IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}})
  id: '#ctor(MediatR.IMediator,Calabonga.EntityProcessor.EntityProcessorConfiguration{`0},Microsoft.Extensions.Logging.ILogger,IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}})'
  parent: Calabonga.EntityProcessor.EntityProcessor`1
  langs:
  - csharp
  - vb
  name: EntityProcessor(IMediator, EntityProcessorConfiguration<TEntity>, ILogger, IEnumerable<IRule<TEntity>>)
  nameWithType: EntityProcessor<TEntity>.EntityProcessor(IMediator, EntityProcessorConfiguration<TEntity>, ILogger, IEnumerable<IRule<TEntity>>)
  fullName: Calabonga.EntityProcessor.EntityProcessor<TEntity>.EntityProcessor(MediatR.IMediator, Calabonga.EntityProcessor.EntityProcessorConfiguration<TEntity>, Microsoft.Extensions.Logging.ILogger, IEnumerable<Calabonga.EntityProcessor.Rules.IRule<TEntity>>)
  type: Constructor
  source:
    remote:
      path: src/Calabonga.EntityProcessor/EntityProcessor.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: .ctor
    path: ../../src/Calabonga.EntityProcessor/EntityProcessor.cs
    startLine: 20
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor
  syntax:
    content: protected EntityProcessor(IMediator mediator, EntityProcessorConfiguration<TEntity> configuration, ILogger logger, IEnumerable<IRule<TEntity>> rules)
    parameters:
    - id: mediator
      type: MediatR.IMediator
    - id: configuration
      type: Calabonga.EntityProcessor.EntityProcessorConfiguration{{TEntity}}
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    - id: rules
      type: IEnumerable{Calabonga.EntityProcessor.Rules.IRule{{TEntity}}}
    content.vb: Protected Sub New(mediator As IMediator, configuration As EntityProcessorConfiguration(Of TEntity), logger As ILogger, rules As IEnumerable(Of IRule(Of TEntity)))
  overload: Calabonga.EntityProcessor.EntityProcessor`1.#ctor*
  nameWithType.vb: EntityProcessor(Of TEntity).EntityProcessor(IMediator, EntityProcessorConfiguration(Of TEntity), ILogger, IEnumerable(Of IRule(Of TEntity)))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Calabonga.EntityProcessor.EntityProcessor(Of TEntity).EntityProcessor(MediatR.IMediator, Calabonga.EntityProcessor.EntityProcessorConfiguration(Of TEntity), Microsoft.Extensions.Logging.ILogger, IEnumerable(Of Calabonga.EntityProcessor.Rules.IRule(Of TEntity)))
  name.vb: EntityProcessor(IMediator, EntityProcessorConfiguration(Of TEntity), ILogger, IEnumerable(Of IRule(Of TEntity)))
- uid: Calabonga.EntityProcessor.EntityProcessor`1.ProcessAsync(`0,Calabonga.EntityProcessor.Actions.IAction{`0},System.Nullable{IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}}},CancellationToken)
  commentId: M:Calabonga.EntityProcessor.EntityProcessor`1.ProcessAsync(`0,Calabonga.EntityProcessor.Actions.IAction{`0},System.Nullable{IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}}},CancellationToken)
  id: ProcessAsync(`0,Calabonga.EntityProcessor.Actions.IAction{`0},System.Nullable{IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}}},CancellationToken)
  parent: Calabonga.EntityProcessor.EntityProcessor`1
  langs:
  - csharp
  - vb
  name: ProcessAsync(TEntity, IAction<TEntity>, Nullable<IEnumerable<IRule<TEntity>>>, CancellationToken)
  nameWithType: EntityProcessor<TEntity>.ProcessAsync(TEntity, IAction<TEntity>, Nullable<IEnumerable<IRule<TEntity>>>, CancellationToken)
  fullName: Calabonga.EntityProcessor.EntityProcessor<TEntity>.ProcessAsync(TEntity, Calabonga.EntityProcessor.Actions.IAction<TEntity>, System.Nullable<IEnumerable<Calabonga.EntityProcessor.Rules.IRule<TEntity>>>, CancellationToken)
  type: Method
  source:
    remote:
      path: src/Calabonga.EntityProcessor/EntityProcessor.cs
      branch: main
      repo: git@github.com:Calabonga/Calabonga.EntityProcessor.git
    id: ProcessAsync
    path: ../../src/Calabonga.EntityProcessor/EntityProcessor.cs
    startLine: 32
  assemblies:
  - Calabonga.EntityProcessor
  namespace: Calabonga.EntityProcessor
  syntax:
    content: public async Task<ExecutionResultBase<TEntity>> ProcessAsync(TEntity entity, IAction<TEntity> actionToExecute, IEnumerable<IRule<TEntity>>? rules = null, CancellationToken cancellationToken = null)
    parameters:
    - id: entity
      type: '{TEntity}'
    - id: actionToExecute
      type: Calabonga.EntityProcessor.Actions.IAction{{TEntity}}
    - id: rules
      type: System.Nullable{IEnumerable{Calabonga.EntityProcessor.Rules.IRule{{TEntity}}}}
    - id: cancellationToken
      type: CancellationToken
    return:
      type: Task{Calabonga.EntityProcessor.Results.ExecutionResultBase{{TEntity}}}
    content.vb: Public Function ProcessAsync(entity As TEntity, actionToExecute As IAction(Of TEntity), rules As IEnumerable(Of IRule(Of TEntity))? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ExecutionResultBase(Of TEntity))
  overload: Calabonga.EntityProcessor.EntityProcessor`1.ProcessAsync*
  nameWithType.vb: EntityProcessor(Of TEntity).ProcessAsync(TEntity, IAction(Of TEntity), Nullable(Of IEnumerable(Of IRule(Of TEntity))), CancellationToken)
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
  fullName.vb: Calabonga.EntityProcessor.EntityProcessor(Of TEntity).ProcessAsync(TEntity, Calabonga.EntityProcessor.Actions.IAction(Of TEntity), System.Nullable(Of IEnumerable(Of Calabonga.EntityProcessor.Rules.IRule(Of TEntity))), CancellationToken)
  name.vb: ProcessAsync(TEntity, IAction(Of TEntity), Nullable(Of IEnumerable(Of IRule(Of TEntity))), CancellationToken)
references:
- uid: Calabonga.EntityProcessor
  commentId: N:Calabonga.EntityProcessor
  name: Calabonga.EntityProcessor
  nameWithType: Calabonga.EntityProcessor
  fullName: Calabonga.EntityProcessor
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Calabonga.EntityProcessor.IEntityProcessor
  commentId: T:Calabonga.EntityProcessor.IEntityProcessor
  parent: Calabonga.EntityProcessor
  name: IEntityProcessor
  nameWithType: IEntityProcessor
  fullName: Calabonga.EntityProcessor.IEntityProcessor
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Calabonga.EntityProcessor.EntityProcessor`1.#ctor*
  commentId: Overload:Calabonga.EntityProcessor.EntityProcessor`1.#ctor
  name: EntityProcessor
  nameWithType: EntityProcessor<TEntity>.EntityProcessor
  fullName: Calabonga.EntityProcessor.EntityProcessor<TEntity>.EntityProcessor
  nameWithType.vb: EntityProcessor(Of TEntity).EntityProcessor
  fullName.vb: Calabonga.EntityProcessor.EntityProcessor(Of TEntity).EntityProcessor
- uid: MediatR.IMediator
  commentId: T:MediatR.IMediator
  parent: MediatR
  isExternal: true
  name: IMediator
  nameWithType: IMediator
  fullName: MediatR.IMediator
- uid: Calabonga.EntityProcessor.EntityProcessorConfiguration{{TEntity}}
  commentId: T:Calabonga.EntityProcessor.EntityProcessorConfiguration{`0}
  parent: Calabonga.EntityProcessor
  definition: Calabonga.EntityProcessor.EntityProcessorConfiguration`1
  name: EntityProcessorConfiguration<TEntity>
  nameWithType: EntityProcessorConfiguration<TEntity>
  fullName: Calabonga.EntityProcessor.EntityProcessorConfiguration<TEntity>
  nameWithType.vb: EntityProcessorConfiguration(Of TEntity)
  fullName.vb: Calabonga.EntityProcessor.EntityProcessorConfiguration(Of TEntity)
  name.vb: EntityProcessorConfiguration(Of TEntity)
  spec.csharp:
  - uid: Calabonga.EntityProcessor.EntityProcessorConfiguration`1
    name: EntityProcessorConfiguration
    nameWithType: EntityProcessorConfiguration
    fullName: Calabonga.EntityProcessor.EntityProcessorConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Calabonga.EntityProcessor.EntityProcessorConfiguration`1
    name: EntityProcessorConfiguration
    nameWithType: EntityProcessorConfiguration
    fullName: Calabonga.EntityProcessor.EntityProcessorConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: IEnumerable{Calabonga.EntityProcessor.Rules.IRule{{TEntity}}}
  commentId: '!:IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}}'
  definition: IEnumerable`1
  name: IEnumerable<IRule<TEntity>>
  nameWithType: IEnumerable<IRule<TEntity>>
  fullName: IEnumerable<Calabonga.EntityProcessor.Rules.IRule<TEntity>>
  nameWithType.vb: IEnumerable(Of IRule(Of TEntity))
  fullName.vb: IEnumerable(Of Calabonga.EntityProcessor.Rules.IRule(Of TEntity))
  name.vb: IEnumerable(Of IRule(Of TEntity))
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Calabonga.EntityProcessor.Rules.IRule`1
    name: IRule
    nameWithType: IRule
    fullName: Calabonga.EntityProcessor.Rules.IRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Calabonga.EntityProcessor.Rules.IRule`1
    name: IRule
    nameWithType: IRule
    fullName: Calabonga.EntityProcessor.Rules.IRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: MediatR
  commentId: N:MediatR
  isExternal: true
  name: MediatR
  nameWithType: MediatR
  fullName: MediatR
- uid: Calabonga.EntityProcessor.EntityProcessorConfiguration`1
  commentId: T:Calabonga.EntityProcessor.EntityProcessorConfiguration`1
  name: EntityProcessorConfiguration<TEntity>
  nameWithType: EntityProcessorConfiguration<TEntity>
  fullName: Calabonga.EntityProcessor.EntityProcessorConfiguration<TEntity>
  nameWithType.vb: EntityProcessorConfiguration(Of TEntity)
  fullName.vb: Calabonga.EntityProcessor.EntityProcessorConfiguration(Of TEntity)
  name.vb: EntityProcessorConfiguration(Of TEntity)
  spec.csharp:
  - uid: Calabonga.EntityProcessor.EntityProcessorConfiguration`1
    name: EntityProcessorConfiguration
    nameWithType: EntityProcessorConfiguration
    fullName: Calabonga.EntityProcessor.EntityProcessorConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Calabonga.EntityProcessor.EntityProcessorConfiguration`1
    name: EntityProcessorConfiguration
    nameWithType: EntityProcessorConfiguration
    fullName: Calabonga.EntityProcessor.EntityProcessorConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Calabonga.EntityProcessor.EntityProcessor`1.ProcessAsync*
  commentId: Overload:Calabonga.EntityProcessor.EntityProcessor`1.ProcessAsync
  name: ProcessAsync
  nameWithType: EntityProcessor<TEntity>.ProcessAsync
  fullName: Calabonga.EntityProcessor.EntityProcessor<TEntity>.ProcessAsync
  nameWithType.vb: EntityProcessor(Of TEntity).ProcessAsync
  fullName.vb: Calabonga.EntityProcessor.EntityProcessor(Of TEntity).ProcessAsync
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Calabonga.EntityProcessor.Actions.IAction{{TEntity}}
  commentId: T:Calabonga.EntityProcessor.Actions.IAction{`0}
  parent: Calabonga.EntityProcessor.Actions
  definition: Calabonga.EntityProcessor.Actions.IAction`1
  name: IAction<TEntity>
  nameWithType: IAction<TEntity>
  fullName: Calabonga.EntityProcessor.Actions.IAction<TEntity>
  nameWithType.vb: IAction(Of TEntity)
  fullName.vb: Calabonga.EntityProcessor.Actions.IAction(Of TEntity)
  name.vb: IAction(Of TEntity)
  spec.csharp:
  - uid: Calabonga.EntityProcessor.Actions.IAction`1
    name: IAction
    nameWithType: IAction
    fullName: Calabonga.EntityProcessor.Actions.IAction
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Calabonga.EntityProcessor.Actions.IAction`1
    name: IAction
    nameWithType: IAction
    fullName: Calabonga.EntityProcessor.Actions.IAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable{IEnumerable{Calabonga.EntityProcessor.Rules.IRule{{TEntity}}}}
  commentId: T:System.Nullable{IEnumerable{Calabonga.EntityProcessor.Rules.IRule{`0}}}
  parent: System
  definition: System.Nullable`1
  name: Nullable<IEnumerable<IRule<TEntity>>>
  nameWithType: Nullable<IEnumerable<IRule<TEntity>>>
  fullName: System.Nullable<IEnumerable<Calabonga.EntityProcessor.Rules.IRule<TEntity>>>
  nameWithType.vb: Nullable(Of IEnumerable(Of IRule(Of TEntity)))
  fullName.vb: System.Nullable(Of IEnumerable(Of Calabonga.EntityProcessor.Rules.IRule(Of TEntity)))
  name.vb: Nullable(Of IEnumerable(Of IRule(Of TEntity)))
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Calabonga.EntityProcessor.Rules.IRule`1
    name: IRule
    nameWithType: IRule
    fullName: Calabonga.EntityProcessor.Rules.IRule
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Calabonga.EntityProcessor.Rules.IRule`1
    name: IRule
    nameWithType: IRule
    fullName: Calabonga.EntityProcessor.Rules.IRule
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: CancellationToken
- uid: Task{Calabonga.EntityProcessor.Results.ExecutionResultBase{{TEntity}}}
  commentId: '!:Task{Calabonga.EntityProcessor.Results.ExecutionResultBase{`0}}'
  definition: Task`1
  name: Task<ExecutionResultBase<TEntity>>
  nameWithType: Task<ExecutionResultBase<TEntity>>
  fullName: Task<Calabonga.EntityProcessor.Results.ExecutionResultBase<TEntity>>
  nameWithType.vb: Task(Of ExecutionResultBase(Of TEntity))
  fullName.vb: Task(Of Calabonga.EntityProcessor.Results.ExecutionResultBase(Of TEntity))
  name.vb: Task(Of ExecutionResultBase(Of TEntity))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1
    name: ExecutionResultBase
    nameWithType: ExecutionResultBase
    fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Calabonga.EntityProcessor.Results.ExecutionResultBase`1
    name: ExecutionResultBase
    nameWithType: ExecutionResultBase
    fullName: Calabonga.EntityProcessor.Results.ExecutionResultBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Calabonga.EntityProcessor.Actions.IAction`1
  commentId: T:Calabonga.EntityProcessor.Actions.IAction`1
  name: IAction<TEntity>
  nameWithType: IAction<TEntity>
  fullName: Calabonga.EntityProcessor.Actions.IAction<TEntity>
  nameWithType.vb: IAction(Of TEntity)
  fullName.vb: Calabonga.EntityProcessor.Actions.IAction(Of TEntity)
  name.vb: IAction(Of TEntity)
  spec.csharp:
  - uid: Calabonga.EntityProcessor.Actions.IAction`1
    name: IAction
    nameWithType: IAction
    fullName: Calabonga.EntityProcessor.Actions.IAction
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Calabonga.EntityProcessor.Actions.IAction`1
    name: IAction
    nameWithType: IAction
    fullName: Calabonga.EntityProcessor.Actions.IAction
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Calabonga.EntityProcessor.Actions
  commentId: N:Calabonga.EntityProcessor.Actions
  name: Calabonga.EntityProcessor.Actions
  nameWithType: Calabonga.EntityProcessor.Actions
  fullName: Calabonga.EntityProcessor.Actions
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
